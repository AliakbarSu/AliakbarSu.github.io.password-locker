{"version":3,"sources":["logo.svg","components/Note.jsx","components/notes.jsx","components/addNote.jsx","App.js","reportWebVitals.js","index.js"],"names":["Note","props","shouldShowPassword","currentDate","moment","isBefore","note","startDate","isAfter","endDate","ListGroup","Item","title","format","className","Badge","onClick","navigator","clipboard","writeText","bg","onDelete","id","Notes","notes","map","generator","require","AddNote","useState","addNote","setTitle","Date","setStartDate","setEndDate","Container","Row","Col","Form","Label","Control","value","onChange","target","type","Button","variant","autoGenPassword","generate","length","numbers","event","preventDefault","as","rows","style","height","showTimeSelect","selected","date","onCancel","dataToPass","uuidv4","onSave","App","isAdding","setIsAdding","passwords","setPasswords","readPasswordsFromLocalStorage","retrievedPasswords","localStorage","getItem","JSON","parse","savePasswordsToLocalStorage","passwordsToSave","removeItem","setItem","stringify","useEffect","passToRemoveId","allPasswords","filter","ps","password","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a6f65d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\nimport { ListGroup, Badge } from 'react-bootstrap'\nimport moment from 'moment'\n\nconst Note = (props) => {\n  function shouldShowPassword() {\n    const currentDate = moment()\n    return (\n      currentDate.isBefore(props.note.startDate) ||\n      currentDate.isAfter(props.note.endDate)\n    )\n  }\n\n  function onDeleteHandler() {\n    props.onDelete(props.note.id)\n  }\n\n  function copyPassHandler() {\n    navigator.clipboard.writeText(props.note.note)\n  }\n\n  return (\n    <ListGroup.Item>\n      <h5>{props.note.title}</h5>\n      <p>\n        {!shouldShowPassword() &&\n          'Opens At ' + moment(props.note.endDate).format('MMMM Do, h:mm a')}\n        {shouldShowPassword() &&\n          moment(props.note.endDate).format('MMMM Do, h:mm a')}\n      </p>\n      {shouldShowPassword() && props.note.note}\n      {!shouldShowPassword() && '******************'}\n      <div className=\"deleteBtnContainer\">\n        {shouldShowPassword() && (\n          <Badge onClick={copyPassHandler} className=\"deleteBadge\" bg=\"primary\">\n            Copy\n          </Badge>\n        )}\n\n        <Badge\n          onClick={onDeleteHandler}\n          className=\"deleteBadge ml-1\"\n          bg=\"secondary\"\n        >\n          Delete\n        </Badge>\n      </div>\n    </ListGroup.Item>\n  )\n}\n\nexport default Note\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport moment from 'moment'\nimport Note from './Note'\n\nconst Notes = (props) => {\n  return (\n    <ListGroup>\n      {props.notes.map((note) => (\n        <Note onDelete={props.onDelete} key={note.id} note={note} />\n      ))}\n    </ListGroup>\n  )\n}\n\nexport default Notes\n","import React, { useState } from 'react'\nimport DatePicker from 'react-datepicker'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { v4 as uuidv4 } from 'uuid'\nvar generator = require('generate-password')\n\nconst AddNote = (props) => {\n  const [note, addNote] = useState('')\n  const [title, setTitle] = useState('')\n  const [startDate, setStartDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n\n  function addNoteHandler(event) {\n    event.preventDefault()\n    addNote(event.target.value)\n  }\n\n  function onPasswordSaveHandler() {\n    const dataToPass = {\n      id: uuidv4(),\n      title,\n      note,\n      startDate,\n      endDate\n    }\n    props.onSave(dataToPass)\n  }\n\n  function generatePassHandler() {\n    const autoGenPassword = generator.generate({\n      length: 15,\n      numbers: true\n    })\n    addNote(autoGenPassword)\n  }\n\n  return (\n    <Container className=\"addNoteContainer\">\n      <Row>\n        <Col>\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            value={title}\n            onChange={({ target: { value } }) => setTitle(value)}\n            type=\"text\"\n          />\n        </Col>\n      </Row>\n      <Row className=\"p-1 d-flex justify-content-between mt-4\">\n        <Col>\n          <Form.Label>Password</Form.Label>\n        </Col>\n        <Col className=\"d-flex justify-content-end\">\n          <Button variant=\"secondary\" onClick={generatePassHandler}>\n            Auto Generate\n          </Button>{' '}\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Form.Control\n            value={note}\n            onChange={addNoteHandler}\n            as=\"textarea\"\n            rows={3}\n            style={{ height: '100px' }}\n          />\n        </Col>\n      </Row>\n      <Row className=\"p-1 mt-2\">\n        <Col>\n          <Form.Label>Lock password from</Form.Label>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DatePicker\n            showTimeSelect\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n          />\n        </Col>\n      </Row>\n      <Row className=\"p-1 mt-3\">\n        <Col>\n          <Form.Label>To</Form.Label>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DatePicker\n            showTimeSelect\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"buttonContainer\">\n          <Button\n            className=\"defaultButton\"\n            variant=\"secondary\"\n            onClick={props.onCancel}\n          >\n            Cancel\n          </Button>{' '}\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"buttonContainer\">\n          <Button\n            className=\"defaultButton\"\n            variant=\"primary\"\n            onClick={onPasswordSaveHandler}\n          >\n            Save Password\n          </Button>{' '}\n        </Col>\n      </Row>\n    </Container>\n\n    // <div>\n    //   <textarea onChange={addNoteHandler} value={note}></textarea>\n    //   <DatePicker\n    //     showTimeSelect\n    //     selected={startDate}\n    //     onChange={(date) => setStartDate(date)}\n    //   />\n    // </div>\n  )\n}\n\nexport default AddNote\n","import { useState, useEffect } from 'react'\nimport logo from './logo.svg'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport './index.css'\nimport Notes from './components/notes'\nimport AddNote from './components/addNote'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\n\nfunction App() {\n  const [isAdding, setIsAdding] = useState(false)\n  const [passwords, setPasswords] = useState([])\n\n  useEffect(() => {\n    setPasswords(readPasswordsFromLocalStorage())\n  }, [])\n\n  function onAddClickHandler() {\n    setIsAdding(true)\n  }\n\n  function onPasswordAddHandler(password) {\n    const allPasswords = readPasswordsFromLocalStorage()\n    allPasswords.push(password)\n    setPasswords(allPasswords)\n    savePasswordsToLocalStorage(allPasswords)\n    setIsAdding(false)\n  }\n\n  function readPasswordsFromLocalStorage() {\n    const retrievedPasswords = localStorage.getItem('passwords')\n    if (!retrievedPasswords) {\n      return []\n    }\n    return JSON.parse(retrievedPasswords)\n  }\n\n  function savePasswordsToLocalStorage(passwordsToSave) {\n    localStorage.removeItem('passwords')\n    localStorage.setItem('passwords', JSON.stringify(passwordsToSave))\n  }\n\n  function onDeleteHandler(passToRemoveId) {\n    let allPasswords = readPasswordsFromLocalStorage()\n    allPasswords = allPasswords.filter((ps) => ps.id !== passToRemoveId)\n    setPasswords(allPasswords)\n    savePasswordsToLocalStorage(allPasswords)\n  }\n\n  function onCancelHandler() {\n    setIsAdding(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col>\n            {!isAdding &&\n              (passwords.length ? (\n                <Notes onDelete={onDeleteHandler} notes={passwords} />\n              ) : (\n                <p className=\"noPassText\">No Password To Display</p>\n              ))}\n            {isAdding && (\n              <AddNote\n                onCancel={onCancelHandler}\n                onSave={onPasswordAddHandler}\n              />\n            )}\n          </Col>\n        </Row>\n        {!isAdding && (\n          <Row>\n            <Col className=\"buttonContainer\">\n              <Button variant=\"primary\" onClick={onAddClickHandler}>\n                Add Password\n              </Button>{' '}\n            </Col>\n          </Row>\n        )}\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}